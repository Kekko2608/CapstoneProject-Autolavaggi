@model CapstoneProject_Autolavaggi.Models.Auth.ProfiloViewModel

@{
    ViewData["Title"] = "Profilo Utente";
}
<br />
<h2 class="my-4">PROFILO UTENTE <span><i class="bi bi-person-circle fs-2"></i></span></h2>

<form asp-action="Profilo" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group col-6 mb-3">
        <label asp-for="Nome" class="blue fw-bold"></label>
        <input asp-for="Nome" class="form-control" />
        <span asp-validation-for="Nome" class="text-danger"></span>
    </div>

    <div class="form-group col-6 mb-3">
        <label asp-for="Email" class="blue fw-bold">E-mail</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group col-6 ">
        <label asp-for="NumeroTelefono" class="blue fw-bold"> Numero di telefono</label>
        <input asp-for="NumeroTelefono" class="form-control" />
        <span asp-validation-for="NumeroTelefono" class="text-danger"></span>
    </div>

    <input type="submit" value="Salva Modifiche" class="btn bg-blue text-white my-3" />

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success mt-3">@ViewBag.Message</div>
    }
</form>

<hr />

<h3 class="my-4 blue fw-bold">LE MIE RECENSIONI</h3>

@if (Model.Recensioni != null && Model.Recensioni.Any())
{
    <ul class="list-group col-6">
        @foreach (var recensione in Model.Recensioni)
        {
            <li class="list-group-item my-1 d-flex justify-content-between align-items-center">
                <div>
                    <strong>@recensione.Titolo</strong><br />
                    Commento : @recensione.Commento<br />
                    Voto: @recensione.Voto <i class="bi bi-star-fill"></i><br />
                    
                    @if (recensione.Autolavaggio != null)
                    {
                        <strong>Autolavaggio: @recensione.Autolavaggio.Nome</strong>
                    }
                    else
                    {
                        <p>Autolavaggio non disponibile</p>
                    }<br />
                    Data: @recensione.Data.ToString("dd/MM/yyyy")
                </div>

                <!-- Modulo per eliminare la recensione -->
                <form asp-controller="Recensione" asp-action="EliminaRecensione" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="recensioneId" value="@recensione.Id" />
                    <button type="submit" class="btn btn-danger btn-sm">Elimina</button>
                </form>
            </li>
        }
    </ul>
}
else
{
    <p>Non hai recensioni.</p>
}


<hr />

<h3 class="my-4 blue fw-bold">LE MIE PRENOTAZIONI</h3>
@if (Model.Prenotazioni != null && Model.Prenotazioni.Any())
{
    <ul class="list-group col-6">
        @foreach (var prenotazione in Model.Prenotazioni.OrderByDescending(p => p.Data))
        {
            <li class="list-group-item">
                <strong>Autolavaggio: @prenotazione.Autolavaggio.Nome</strong>
                <p class="mt-3">Servizio prenotato per il: @prenotazione.Data.ToString("dd/MM/yyyy")</p>
                <p>Dettagli servizio: @prenotazione.Servizio.Nome</p>
            </li>
        }
    </ul>
}
else
{
    <p>Non hai prenotazioni.</p>
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
