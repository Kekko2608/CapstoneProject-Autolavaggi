// <auto-generated />
using System;
using CapstoneProject_Autolavaggi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapstoneProject_Autolavaggi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240828163806_updateTabellaRole")]
    partial class updateTabellaRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Roles");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_Users");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Auth.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_UserRoles");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Autolavaggio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Città")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Immagine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Autolavaggi");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TipoId");

                    b.ToTable("Autolavaggi");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Orario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Alle")
                        .HasColumnType("time");

                    b.Property<int>("AutolavaggioId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Dalle")
                        .HasColumnType("time");

                    b.Property<int>("GiornoSettimana")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutolavaggioId");

                    b.ToTable("Orari");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Prenotazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutolavaggioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stato")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Prenotazioni");

                    b.HasIndex("AutolavaggioId");

                    b.HasIndex("UserId");

                    b.ToTable("Prenotazioni");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Recensione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutolavaggioId")
                        .HasColumnType("int");

                    b.Property<string>("Commento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Voto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutolavaggioId");

                    b.HasIndex("UserId");

                    b.ToTable("Recensioni");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Servizio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutolavaggioId")
                        .HasColumnType("int");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutolavaggioId");

                    b.ToTable("Servizi");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.ServizioPrenotazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PrenotazioneId")
                        .HasColumnType("int");

                    b.Property<int>("ServizioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrenotazioneId");

                    b.HasIndex("ServizioId");

                    b.ToTable("ServiziPrenotazioni");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipi");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Auth.UserRole", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Auth.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRoles_Roles");

                    b.HasOne("CapstoneProject_Autolavaggi.Models.Auth.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRoles_Users");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Autolavaggio", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Auth.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CapstoneProject_Autolavaggi.Models.Tipo", "Tipo")
                        .WithMany("Autolavaggi")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Orario", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Autolavaggio", "Autolavaggio")
                        .WithMany("Orari")
                        .HasForeignKey("AutolavaggioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autolavaggio");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Prenotazione", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Autolavaggio", "Autolavaggio")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("AutolavaggioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CapstoneProject_Autolavaggi.Models.Auth.User", "User")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autolavaggio");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Recensione", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Autolavaggio", "Autolavaggio")
                        .WithMany("Recensioni")
                        .HasForeignKey("AutolavaggioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapstoneProject_Autolavaggi.Models.Auth.User", "User")
                        .WithMany("Recensioni")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autolavaggio");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Servizio", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Autolavaggio", null)
                        .WithMany("Servizi")
                        .HasForeignKey("AutolavaggioId");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.ServizioPrenotazione", b =>
                {
                    b.HasOne("CapstoneProject_Autolavaggi.Models.Prenotazione", "Prenotazione")
                        .WithMany("ServiziPrenotazione")
                        .HasForeignKey("PrenotazioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapstoneProject_Autolavaggi.Models.Servizio", "Servizio")
                        .WithMany()
                        .HasForeignKey("ServizioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prenotazione");

                    b.Navigation("Servizio");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Auth.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Auth.User", b =>
                {
                    b.Navigation("Prenotazioni");

                    b.Navigation("Recensioni");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Autolavaggio", b =>
                {
                    b.Navigation("Orari");

                    b.Navigation("Prenotazioni");

                    b.Navigation("Recensioni");

                    b.Navigation("Servizi");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Prenotazione", b =>
                {
                    b.Navigation("ServiziPrenotazione");
                });

            modelBuilder.Entity("CapstoneProject_Autolavaggi.Models.Tipo", b =>
                {
                    b.Navigation("Autolavaggi");
                });
#pragma warning restore 612, 618
        }
    }
}
